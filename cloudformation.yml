---
AWSTemplateFormatVersion: "2010-09-09"

Description: clw

Parameters:

  EnvironmentName:
    Description: The Environment that this script is to create
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  ProjectName:
    Description: The project that this script is to create
    Type: String

  GitHubOrganization:
    Type: String

  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  OAuthToken:
    Type: String
    NoEcho: True

Resources:
  # Site hosting bucket
  SiteBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join
        - '-'
        - - !Ref ProjectName
          - hosting-bucket
          - !Ref EnvironmentName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
            
  ArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join
        - '-'
        - - !Ref ProjectName
          - artifact-store
          - !Ref EnvironmentName
                
  BuildServiceRole:
    Type: 'AWS::IAM::Role'
    DependsOn: ArtifactStoreBucket
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'codebuild.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-build-service-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:DeleteObject*'
                  - 's3:GetObject*'
                  - 's3:ListBucket*'
                  - 's3:PutObject*'
                Resource:
                  - !GetAtt ArtifactStoreBucket.Arn
                  - !Sub '${ArtifactStoreBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - 's3:DeleteObject*'
                  - 's3:ListBucket*'
                  - 's3:PutObject*'
                  - 's3:GetObject*'
                Resource:
                  - !GetAtt SiteBucket.Arn
                  - !Sub '${SiteBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - '*'

  CodeBuildBuild:
    Type: 'AWS::CodeBuild::Project'
    DependsOn: BuildServiceRole
    Properties:
      Name: !Sub '${AWS::StackName}-install'
      ServiceRole: !GetAtt BuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.1
          phases:
            install:
              commands:
                # Install nodejs
                - curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -
                - yum -y install nodejs
                # Install Jekyll, bundler, and dependencies
                - yum -y install git-core
                - gem install jekyll bundler
                - bundle install
                - npm install
            build:
              commands:
                - jekyll build
                - npm run toc
            post_build:
              commands:
                - echo Jekyll deploy started on `date`
                - aws s3 rm s3://${SiteBucket} --recursive
                - aws s3 cp _site s3://${SiteBucket} --recursive
                - echo Jekyll deploy completed on `date`
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/eb-ruby-2.3-amazonlinux-64:2.1.6'
      TimeoutInMinutes: 10

  PipelineServiceRole:
    Type: 'AWS::IAM::Role'
    DependsOn:
      - CodeBuildBuild
      - ArtifactStoreBucket
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'codepipeline.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-pipeline-service-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:DeleteObject*'
                  - 's3:GetObject*'
                  - 's3:ListBucket*'
                  - 's3:PutObject*'
                Resource:
                  - !GetAtt ArtifactStoreBucket.Arn
                  - !Sub '${ArtifactStoreBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource:
                  - !GetAtt CodeBuildBuild.Arn

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn:
      - PipelineServiceRole
      - ArtifactStoreBucket
    Properties:
      Name: !Sub '${AWS::StackName}-codepipeline'
      RoleArn: !GetAtt PipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
          - Name: Source
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: 1
            Configuration:
              Owner: !Ref GitHubOrganization
              Repo: !Ref GitHubRepo
              Branch: !Ref GitHubBranch
              PollForSourceChanges: true # see ReadMe.md Future Work
              OAuthToken: !Ref OAuthToken
            OutputArtifacts:
              - Name: Source
            RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: _site
              Configuration:
                ProjectName: !Ref CodeBuildBuild
              RunOrder: 1